{
  "Program": [
    "$"
  ],
  "DeclarationList": [
    "$",
    "break",
    ";",
    "{",
    "if",
    "while",
    "return",
    "ID",
    "+",
    "-",
    "(",
    "NUM",
    "}"
  ],
  "Declaration": [
    "int",
    "void",
    "$",
    "break",
    ";",
    "{",
    "if",
    "while",
    "return",
    "ID",
    "+",
    "-",
    "(",
    "NUM",
    "}"
  ],
  "DeclarationInitial": [
    "(",
    ";",
    "[",
    ",",
    ")"
  ],
  "DeclarationPrime": [
    "int",
    "void",
    "$",
    "break",
    ";",
    "{",
    "if",
    "while",
    "return",
    "ID",
    "+",
    "-",
    "(",
    "NUM",
    "}"
  ],
  "VarDeclarationPrime": [
    "int",
    "void",
    "$",
    "break",
    ";",
    "{",
    "if",
    "while",
    "return",
    "ID",
    "+",
    "-",
    "(",
    "NUM",
    "}"
  ],
  "FunDeclarationPrime": [
    "int",
    "void",
    "$",
    "break",
    ";",
    "{",
    "if",
    "while",
    "return",
    "ID",
    "+",
    "-",
    "(",
    "NUM",
    "}"
  ],
  "TypeSpecifier": [
    "ID"
  ],
  "Params": [
    ")"
  ],
  "ParamList": [
    ")"
  ],
  "Param": [
    ",",
    ")"
  ],
  "ParamPrime": [
    ")",
    ","
  ],
  "CompoundStmt": [
    "int",
    "void",
    "$",
    "break",
    ";",
    "{",
    "if",
    "while",
    "return",
    "ID",
    "+",
    "-",
    "(",
    "NUM",
    "}",
    "else"
  ],
  "StatementList": [
    "}"
  ],
  "Statement": [
    "break",
    ";",
    "{",
    "if",
    "while",
    "return",
    "ID",
    "+",
    "-",
    "(",
    "NUM",
    "}",
    "else"
  ],
  "ExpressionStmt": [
    "break",
    ";",
    "{",
    "if",
    "while",
    "return",
    "ID",
    "+",
    "-",
    "(",
    "NUM",
    "}",
    "else"
  ],
  "SelectionStmt": [
    "break",
    ";",
    "{",
    "if",
    "while",
    "return",
    "ID",
    "+",
    "-",
    "(",
    "NUM",
    "}",
    "else"
  ],
  "IterationStmt": [
    "break",
    ";",
    "{",
    "if",
    "while",
    "return",
    "ID",
    "+",
    "-",
    "(",
    "NUM",
    "}",
    "else"
  ],
  "ReturnStmt": [
    "break",
    ";",
    "{",
    "if",
    "while",
    "return",
    "ID",
    "+",
    "-",
    "(",
    "NUM",
    "}",
    "else"
  ],
  "ReturnStmtPrime": [
    "break",
    ";",
    "{",
    "if",
    "while",
    "return",
    "ID",
    "+",
    "-",
    "(",
    "NUM",
    "}",
    "else"
  ],
  "Expression": [
    ";",
    ")",
    "]",
    ","
  ],
  "B": [
    ";",
    ")",
    "]",
    ","
  ],
  "H": [
    ";",
    ")",
    "]",
    ","
  ],
  "SimpleExpressionZegond": [
    ";",
    ")",
    "]",
    ","
  ],
  "SimpleExpressionPrime": [
    ";",
    ")",
    "]",
    ","
  ],
  "C": [
    ";",
    ")",
    "]",
    ","
  ],
  "Relop": [
    "+",
    "-",
    "(",
    "ID",
    "NUM"
  ],
  "AdditiveExpression": [
    ";",
    ")",
    "]",
    ","
  ],
  "AdditiveExpressionPrime": [
    "<",
    "==",
    ";",
    ")",
    "]",
    ","
  ],
  "AdditiveExpressionZegond": [
    "<",
    "==",
    ";",
    ")",
    "]",
    ","
  ],
  "D": [
    "<",
    "==",
    ";",
    ")",
    "]",
    ","
  ],
  "Addop": [
    "+",
    "-",
    "(",
    "ID",
    "NUM"
  ],
  "Term": [
    "+",
    "-",
    ";",
    ")",
    "<",
    "==",
    "]",
    ","
  ],
  "TermPrime": [
    "+",
    "-",
    ";",
    ")",
    "<",
    "==",
    "]",
    ","
  ],
  "TermZegond": [
    "+",
    "-",
    ";",
    ")",
    "<",
    "==",
    "]",
    ","
  ],
  "G": [
    "+",
    "-",
    ";",
    ")",
    "<",
    "==",
    "]",
    ","
  ],
  "Factor": [
    "*",
    "+",
    "-",
    ";",
    ")",
    "<",
    "==",
    "]",
    ","
  ],
  "VarCallPrime": [
    "*",
    "+",
    "-",
    ";",
    ")",
    "<",
    "==",
    "]",
    ","
  ],
  "VarPrime": [
    "*",
    "+",
    "-",
    ";",
    ")",
    "<",
    "==",
    "]",
    ","
  ],
  "SignedFactor": [
    "*",
    "+",
    "-",
    ";",
    ")",
    "<",
    "==",
    "]",
    ","
  ],
  "SignedFactorPrime": [
    "*",
    "+",
    "-",
    "<",
    "==",
    ";",
    ")",
    "]",
    ","
  ],
  "SignedFactorZegond": [
    "*",
    "+",
    "-",
    "<",
    "==",
    ";",
    ")",
    "]",
    ","
  ],
  "FactorPrime": [
    "*",
    "+",
    "-",
    "<",
    "==",
    ";",
    ")",
    "]",
    ","
  ],
  "FactorZegond": [
    "*",
    "+",
    "-",
    "<",
    "==",
    ";",
    ")",
    "]",
    ","
  ],
  "Args": [
    ")"
  ],
  "ArgList": [
    ")"
  ],
  "ArgListPrime": [
    ")"
  ]
}

