{
  "Program": [
    [
      "DeclarationList"
    ]
  ],
  "DeclarationList": [
    [
      "Declaration",
      "DeclarationList"
    ],
    [
      "EPSILON"
    ]
  ],
  "Declaration": [
    [
      "DeclarationInitial",
      "DeclarationPrime"
    ]
  ],
  "DeclarationInitial": [
    [
      "TypeSpecifier",
      "#pid",
      "ID"
    ]
  ],
  "DeclarationPrime": [
    [
      "FunDeclarationPrime"
    ],
    [
      "VarDeclarationPrime"
    ]
  ],
  "VarDeclarationPrime": [
    [
      ";",
      "#add_variable_to_ss"
    ],
    [
      "[",
      "#push_number",
      "NUM",
      "]",
      ";",
      "#create_array"
    ]
  ],
  "FunDeclarationPrime": [
    [
      "#define_params",
      "(",
      "Params",
      ")",
      "#start_function",
      "#find_return",
      "CompoundStmt",
      "#close_return",
      "#return_to_main",
      "#end_of_a_function"
    ]
  ],
  "TypeSpecifier": [
    [
      "int"
    ],
    [
      "void"
    ]
  ],
  "Params": [
    [
      "int",
      "#pid",
      "ID",
      "#add_variable_to_ss",
      "ParamPrime",
      "ParamList"
    ],
    [
      "void"
    ]
  ],
  "ParamList": [
    [
      ",",
      "Param",
      "#add_variable_to_ss",
      "ParamList"
    ],
    [
      "EPSILON"
    ]
  ],
  "Param": [
    [
      "DeclarationInitial",
      "ParamPrime"
    ]
  ],
  "ParamPrime": [
    [
      "#define_array_argument",
      "[",
      "]"
    ],
    [
      "EPSILON"
    ]
  ],
  "CompoundStmt": [
    [
      "#go_to_next_scope",
      "{",
      "DeclarationList",
      "StatementList",
      "}",
      "#back_to_previous_scope"
    ]
  ],
  "StatementList": [
    [
      "Statement",
      "StatementList"
    ],
    [
      "EPSILON"
    ]
  ],
  "Statement": [
    [
      "ExpressionStmt"
    ],
    [
      "CompoundStmt"
    ],
    [
      "SelectionStmt"
    ],
    [
      "IterationStmt"
    ],
    [
      "ReturnStmt"
    ]
  ],
  "ExpressionStmt": [
    [
      "Expression",
      ";",
      "#pop_trash_data"
    ],
    [
      "break",
      ";",
      "#end_of_loop_with_break"
    ],
    [
      ";"
    ]
  ],
  "SelectionStmt": [
    [
      "if",
      "(",
      "Expression",
      ")",
      "#save",
      "Statement",
      "else",
      "#jpf_save",
      "Statement",
      "#jump"
    ]
  ],
  "IterationStmt": [
    [
      "while",
      "#label",
      "(",
      "Expression",
      ")",
      "#new_break",
      "#save",
      "Statement",
      "#handle_jumps_in_while_loop",
      "#back_to_scope_with_end_break"
    ]
  ],
  "ReturnStmt": [
    [
      "return",
      "ReturnStmtPrime",
      "#save_point_of_return"
    ]
  ],
  "ReturnStmtPrime": [
    [
      "#pindex",
      ";"
    ],
    [
      "Expression",
      ";"
    ]
  ],
  "Expression": [
    [
      "SimpleExpressionZegond"
    ],
    [
      "#pid_addr",
      "ID",
      "B"
    ]
  ],
  "B": [
    [
      "=",
      "Expression",
      "#assign_operation"
    ],
    [
      "[",
      "Expression",
      "]",
      "#handling_indexes_of_arrays",
      "H"
    ],
    [
      "SimpleExpressionPrime"
    ]
  ],
  "H": [
    [
      "=",
      "Expression",
      "#assign_operation"
    ],
    [
      "G",
      "D",
      "C"
    ]
  ],
  "SimpleExpressionZegond": [
    [
      "AdditiveExpressionZegond",
      "C"
    ]
  ],
  "SimpleExpressionPrime": [
    [
      "AdditiveExpressionPrime",
      "C"
    ]
  ],
  "C": [
    [
      "#popr",
      "Relop",
      "AdditiveExpression",
      "#save_operation"
    ],
    [
      "EPSILON"
    ]
  ],
  "Relop": [
    [
      "<"
    ],
    [
      "=="
    ]
  ],
  "AdditiveExpression": [
    [
      "Term",
      "D"
    ]
  ],
  "AdditiveExpressionPrime": [
    [
      "TermPrime",
      "D"
    ]
  ],
  "AdditiveExpressionZegond": [
    [
      "TermZegond",
      "D"
    ]
  ],
  "D": [
    [
      "#popr",
      "Addop",
      "Term",
      "#save_operation",
      "D"
    ],
    [
      "EPSILON"
    ]
  ],
  "Addop": [
    [
      "+"
    ],
    [
      "-"
    ]
  ],
  "Term": [
    [
      "SignedFactor",
      "G"
    ]
  ],
  "TermPrime": [
    [
      "SignedFactorPrime",
      "G"
    ]
  ],
  "TermZegond": [
    [
      "SignedFactorZegond",
      "G"
    ]
  ],
  "G": [
    [
      "*",
      "SignedFactor",
      "#mult",
      "G"
    ],
    [
      "EPSILON"
    ]
  ],
  "SignedFactor": [
    [
      "+",
      "Factor"
    ],
    [
      "-",
      "Factor",
      "#negative"
    ],
    [
      "Factor"
    ]
  ],
  "SignedFactorPrime": [
    [
      "FactorPrime"
    ]
  ],
  "SignedFactorZegond": [
    [
      "+",
      "Factor"
    ],
    [
      "-",
      "Factor",
      "#negative"
    ],
    [
      "FactorZegond"
    ]
  ],
  "Factor": [
    [
      "(",
      "Expression",
      ")"
    ],
    [
      "#pid_addr",
      "ID",
      "VarCallPrime"
    ],
    [
      "#push_number",
      "NUM"
    ]
  ],
  "VarCallPrime": [
    [
      "(",
      "Args",
      "#output_function",
      ")",
      "#call_function"
    ],
    [
      "VarPrime"
    ]
  ],
  "VarPrime": [
    [
      "[",
      "Expression",
      "]",
      "#handling_indexes_of_arrays"
    ],
    [
      "EPSILON"
    ]
  ],
  "FactorPrime": [
    [
      "(",
      "Args",
      "#output_function",
      ")",
      "#call_function"
    ],
    [
      "EPSILON"
    ]
  ],
  "FactorZegond": [
    [
      "(",
      "Expression",
      ")"
    ],
    [
      "#push_number",
      "NUM"
    ]
  ],
  "Args": [
    [
      "ArgList"
    ],
    [
      "EPSILON"
    ]
  ],
  "ArgList": [
    [
      "Expression",
      "ArgListPrime"
    ]
  ],
  "ArgListPrime": [
    [
      ",",
      "Expression",
      "ArgListPrime"
    ],
    [
      "EPSILON"
    ]
  ]
}
